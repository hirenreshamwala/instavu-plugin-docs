{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"InstaVu WebPlugin Usage Using InstaVu web plugin you can display your product in 3D to your website. You need to load the javascript library to your website and initialize the viewport. Include <script type=\"text/javascript\" src=\"https://instavu3d.com/webplugin/instavu.plugin.lib.js\"></script> Get your scene id https://instavu3d.com/webplugin/info/{API_KEY} Viewport Models will display on the Viewport with the help of Renderer API. Contact administrator for your API key. Initialize Viewport HTML: <div id=\"3d_container\"></div> JS: var viewport = new InstaVUPlugin({ container : document.getElementById('3d_container'), apiKey : '{API_KEY}', //{Required} Provide by administrator scene_id : '{SCENE_ID}', //{Required} Provide by administrator }); Events scene_load:progress This event will return you the progress of scene loading scene_load:complete Event triggered when the scene load on the viewport successfully viewport.addEventListener('scene_load:progress', function ( event ) { console.log(event.message); // The percentage of scene loading }); viewport.addEventListener('scene_load:complete', function ( event ) { console.log(event.message); }); Also you can use viewport.on('scene_load:progress', function ( event ) { console.log(event.message); // The percentage of scene loading }); viewport.on('scene_load:complete', function ( event ) { console.log(event.message); }); Variable Using this variable you can get available surfaces. This will help you to load the texture on particular surface. viewport.surfaces // Data of viewport.surfaces // [ // { // \"name\": \"surface1\", // \"image\": \"surface1_thumbnail.jpg\" // }, // { // \"name\": \"surface2\", // \"image\": \"surface2_thumbnail.jpg\" // }, // { // \"name\": \"surface3\", // \"image\": \"surface3_thumbnail.jpg\" // } // ] // Surface Thumbnail URL // http://instavu3d.com/webplugin/projects/assets/<scene_id>/<thumbnail> Methods loadTexture Load the texture to the surface. Once the scene loaded successfully, you can load texture on the surface. Parameters name String ? Name of the surface textureUrl String ? Texture url onSuccess Function ? called on completion with no argument. onError Function ? called on fail to load with one argument (error) . Error ? onProgress Function ? called on progress loading with one argument (progress) . event ? var url = '{TEXTURE URL}'; viewport.loadTexture('<name>',url,function(){ //Call on success }, function(error){ //Call on error },function(progress){ //Call on progress }); Example: var url = '{TEXTURE URL}'; for (var i = 0; i < viewport.surfaces.length; i++){ viewport.loadTexture(viewport.surfaces[i]['name'],url, function(){ console.log('Texture loaded successfully'); }); } loadColor Load the color to the scene. Once the scene loaded successfully, you can load color on the scene. Parameters name String ? Name of the surface (required) r Number ? Red color of RGB - Integer 0 to 255 (required) g Number ? Green color of RGB - Integer 0 to 255 (required) b Number ? Blue color of RGB - Integer 0 to 255 (required) var color = { r: 212, g: 112, b: 32 } viewport.loadColor(name, color.r,color.g,color.b); resize Resize the viewport Parameters width Number ? (Required) height Number ? (Required) viewport.resize(width,height); resetPosition Reset the scene at begin position. viewport.resetPosition(); toImage Get base64 image of the canvas Returns DataURI ? viewport.toImage(); getImageBlob Get Blob image of the canvas Returns DataURI ? viewport.getImageBlob(); Example <!doctype html> <html> <body> <div id=\"3d_container\" width=\"800\" height=\"600\"></div> <script type=\"text/javascript\" src=\"https://instavu3d.com/webplugin/instavu.plugin.lib.js\"></script> <script type=\"text/javascript\"> var viewport = new InstaVUPlugin({ container : document.getElementById('3d_container'), apikey : '<YourAPIKey>', scene_id : '<YourSceneId>', }); viewport.addEventListener('scene_load:progress', function (event){ console.log(event.message); }); viewport.addEventListener('scene_load:complete', function (event){ console.log('Scene loaded successfully'); loadTexture('<TextureUrl>'); }); function loadTexture(textureUrl){ //Show loader for (var i = 0; i < viewport.surfaces.length; i++){ viewport.loadTexture(viewport.surfaces[i]['name'],textureUrl, function(){ //Hide loader }); } } </script> </body> </html>","title":"InstaVu WebPlugin Usage"},{"location":"#instavu-webplugin-usage","text":"Using InstaVu web plugin you can display your product in 3D to your website. You need to load the javascript library to your website and initialize the viewport.","title":"InstaVu WebPlugin Usage"},{"location":"#include","text":"<script type=\"text/javascript\" src=\"https://instavu3d.com/webplugin/instavu.plugin.lib.js\"></script>","title":"Include"},{"location":"#get-your-scene-id","text":"https://instavu3d.com/webplugin/info/{API_KEY}","title":"Get your scene id"},{"location":"#viewport","text":"Models will display on the Viewport with the help of Renderer API. Contact administrator for your API key.","title":"Viewport"},{"location":"#initialize-viewport","text":"HTML: <div id=\"3d_container\"></div> JS: var viewport = new InstaVUPlugin({ container : document.getElementById('3d_container'), apiKey : '{API_KEY}', //{Required} Provide by administrator scene_id : '{SCENE_ID}', //{Required} Provide by administrator });","title":"Initialize Viewport"},{"location":"#events","text":"scene_load:progress This event will return you the progress of scene loading scene_load:complete Event triggered when the scene load on the viewport successfully viewport.addEventListener('scene_load:progress', function ( event ) { console.log(event.message); // The percentage of scene loading }); viewport.addEventListener('scene_load:complete', function ( event ) { console.log(event.message); });","title":"Events"},{"location":"#also-you-can-use","text":"viewport.on('scene_load:progress', function ( event ) { console.log(event.message); // The percentage of scene loading }); viewport.on('scene_load:complete', function ( event ) { console.log(event.message); });","title":"Also you can use"},{"location":"#variable","text":"Using this variable you can get available surfaces. This will help you to load the texture on particular surface. viewport.surfaces // Data of viewport.surfaces // [ // { // \"name\": \"surface1\", // \"image\": \"surface1_thumbnail.jpg\" // }, // { // \"name\": \"surface2\", // \"image\": \"surface2_thumbnail.jpg\" // }, // { // \"name\": \"surface3\", // \"image\": \"surface3_thumbnail.jpg\" // } // ] // Surface Thumbnail URL // http://instavu3d.com/webplugin/projects/assets/<scene_id>/<thumbnail>","title":"Variable"},{"location":"#methods","text":"","title":"Methods"},{"location":"#loadtexture","text":"Load the texture to the surface. Once the scene loaded successfully, you can load texture on the surface.","title":"loadTexture"},{"location":"#parameters","text":"name String ? Name of the surface textureUrl String ? Texture url onSuccess Function ? called on completion with no argument. onError Function ? called on fail to load with one argument (error) . Error ? onProgress Function ? called on progress loading with one argument (progress) . event ? var url = '{TEXTURE URL}'; viewport.loadTexture('<name>',url,function(){ //Call on success }, function(error){ //Call on error },function(progress){ //Call on progress }); Example: var url = '{TEXTURE URL}'; for (var i = 0; i < viewport.surfaces.length; i++){ viewport.loadTexture(viewport.surfaces[i]['name'],url, function(){ console.log('Texture loaded successfully'); }); }","title":"Parameters"},{"location":"#loadcolor","text":"Load the color to the scene. Once the scene loaded successfully, you can load color on the scene.","title":"loadColor"},{"location":"#parameters_1","text":"name String ? Name of the surface (required) r Number ? Red color of RGB - Integer 0 to 255 (required) g Number ? Green color of RGB - Integer 0 to 255 (required) b Number ? Blue color of RGB - Integer 0 to 255 (required) var color = { r: 212, g: 112, b: 32 } viewport.loadColor(name, color.r,color.g,color.b);","title":"Parameters"},{"location":"#resize","text":"Resize the viewport","title":"resize"},{"location":"#parameters_2","text":"width Number ? (Required) height Number ? (Required) viewport.resize(width,height);","title":"Parameters"},{"location":"#resetposition","text":"Reset the scene at begin position. viewport.resetPosition();","title":"resetPosition"},{"location":"#toimage","text":"Get base64 image of the canvas Returns DataURI ? viewport.toImage();","title":"toImage"},{"location":"#getimageblob","text":"Get Blob image of the canvas Returns DataURI ? viewport.getImageBlob();","title":"getImageBlob"},{"location":"#example","text":"<!doctype html> <html> <body> <div id=\"3d_container\" width=\"800\" height=\"600\"></div> <script type=\"text/javascript\" src=\"https://instavu3d.com/webplugin/instavu.plugin.lib.js\"></script> <script type=\"text/javascript\"> var viewport = new InstaVUPlugin({ container : document.getElementById('3d_container'), apikey : '<YourAPIKey>', scene_id : '<YourSceneId>', }); viewport.addEventListener('scene_load:progress', function (event){ console.log(event.message); }); viewport.addEventListener('scene_load:complete', function (event){ console.log('Scene loaded successfully'); loadTexture('<TextureUrl>'); }); function loadTexture(textureUrl){ //Show loader for (var i = 0; i < viewport.surfaces.length; i++){ viewport.loadTexture(viewport.surfaces[i]['name'],textureUrl, function(){ //Hide loader }); } } </script> </body> </html>","title":"Example"}]}